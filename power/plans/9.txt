-- using 1115013950 as a seed to the RNG
-- @(#)9.sql	2.1.8.1
-- TPC-H/TPC-R Product Type Profit Measure Query (Q9)
-- Functional Query Definition
-- Approved February 1998
START TRANSACTION;

EXPLAIN


select
	nation,
	o_year,
	sum(amount) as sum_profit
from
	(
		select
			n_name as nation,
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
		from
			part,
			supplier,
			lineitem,
			partsupp,
			orders,
			nation
		where
			s_suppkey = l_suppkey
			and ps_suppkey = l_suppkey
			and ps_partkey = l_partkey
			and p_partkey = l_partkey
			and o_orderkey = l_orderkey
			and s_nationkey = n_nationkey
			and p_name like '%tomato%'
	) as profit
group by
	nation,
	o_year
order by
	nation,
	o_year desc;
COMMIT;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	nation	ALL	PRIMARY	NULL	NULL	NULL	25	Using temporary; Using filesort
1	SIMPLE	supplier	ref	PRIMARY,i_s_nationkey	i_s_nationkey	5	dbt3.nation.n_nationkey	2057	Using index
1	SIMPLE	partsupp	ref	PRIMARY,i_ps_suppkey,i_ps_partkey	i_ps_suppkey	4	dbt3.supplier.s_suppkey	37	Using join buffer (flat, BKA join); Key-ordered Rowid-ordered scan
1	SIMPLE	part	eq_ref	PRIMARY	PRIMARY	4	dbt3.partsupp.ps_partkey	1	Using where; Using join buffer (incremental, BKA join); Key-ordered scan
1	SIMPLE	lineitem	ref	i_l_suppkey_partkey	i_l_suppkey_partkey	10	dbt3.partsupp.ps_partkey,dbt3.supplier.s_suppkey	3	Using where; Using join buffer (incremental, BKA join); Key-ordered Rowid-ordered scan
1	SIMPLE	orders	eq_ref	PRIMARY	PRIMARY	4	dbt3.lineitem.l_orderkey	1	Using join buffer (incremental, BKA join); Key-ordered scan
